{"version":3,"file":"static/js/970.4ac4beb7.chunk.js","mappings":"qRAce,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACvC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOX,EAASW,GAClB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,SAsBN,OACE,UAAC,EAAAC,YAAD,YACE,SAAC,EAAAC,UAAD,qCAEA,UAAC,EAAAC,aAAD,CAAcC,SAhBG,SAAAC,GACnBA,EAAIC,iBAEAhB,EAASiB,OAAS,GACpBC,EAAAA,EAAAA,IAAgB,gDAIlBhB,EAASiB,EAAAA,GAAAA,SAAwB,CAAEvB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAbhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,MAmB4BmB,aAAa,MAAnD,WACE,UAAC,EAAAC,eAAD,CAAgBC,QAASlB,EAAzB,kBAEE,SAAC,EAAAmB,UAAD,CACEC,KAAK,OACL5B,KAAK,OACL6B,YAAY,kBACZf,MAAOd,EACP8B,SAAUlB,EACVmB,GAAIvB,EACJwB,UAAQ,QAIZ,UAAC,EAAAP,eAAD,CAAgBC,QAAShB,EAAzB,oBAEE,SAAC,EAAAiB,UAAD,CACEC,KAAK,QACL5B,KAAK,QACL6B,YAAY,oBACZf,MAAOZ,EACP4B,SAAUlB,EACVmB,GAAIrB,EACJsB,UAAQ,QAIZ,UAAC,EAAAP,eAAD,CAAgBC,QAASf,EAAzB,sBAEE,SAAC,EAAAgB,UAAD,CACEC,KAAK,WACL5B,KAAK,WACL6B,YAAY,eACZf,MAAOV,EACP0B,SAAUlB,EACVmB,GAAIpB,EACJqB,UAAQ,QAIZ,SAAC,EAAAC,cAAD,CAAeL,KAAK,SAApB,8B,+QClGKb,EAAcmB,EAAAA,EAAAA,IAAH,kHAOXlB,EAAYkB,EAAAA,EAAAA,GAAH,4IAQTjB,EAAeiB,EAAAA,EAAAA,KAAH,gNAUZT,EAAiBS,EAAAA,EAAAA,MAAH,wHAOdP,EAAYO,EAAAA,EAAAA,MAAH,wLAUTD,EAAgBC,EAAAA,EAAAA,OAAH,ge","sources":["pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/RegisterPage.styled.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { showInfoMessage } from 'utils/notifications';\nimport {\n  FormWrapper,\n  FormTitle,\n  RegisterForm,\n  FormInputLabel,\n  FormInput,\n  FormSubmitBtn,\n} from './RegisterPage.styled';\n\nexport default function RegisterPage() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const onInputChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n\n    if (password.length < 5) {\n      showInfoMessage('Password must contain at least 6 characters');\n      return;\n    }\n\n    dispatch(authOperations.register({ name, email, password }));\n    formReset();\n  };\n\n  return (\n    <FormWrapper>\n      <FormTitle>New User registration</FormTitle>\n\n      <RegisterForm onSubmit={onFormSubmit} autoComplete=\"off\">\n        <FormInputLabel htmlFor={nameInputId}>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={onInputChange}\n            id={nameInputId}\n            required\n          />\n        </FormInputLabel>\n\n        <FormInputLabel htmlFor={emailInputId}>\n          E-mail\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your e-mail\"\n            value={email}\n            onChange={onInputChange}\n            id={emailInputId}\n            required\n          />\n        </FormInputLabel>\n\n        <FormInputLabel htmlFor={passwordInputId}>\n          Password\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Set password\"\n            value={password}\n            onChange={onInputChange}\n            id={passwordInputId}\n            required\n          />\n        </FormInputLabel>\n\n        <FormSubmitBtn type=\"submit\">Register</FormSubmitBtn>\n      </RegisterForm>\n    </FormWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 80px;\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 30px;\n  text-align: center;\n  text-transform: uppercase;\n  color: #3498db;\n`;\n\nexport const RegisterForm = styled.form`\n  width: fit-content;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background-color: white;\n  box-shadow: 0px 2px 10px -3px;\n`;\n\nexport const FormInputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0px 20px;\n  font-size: 24px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 4px;\n  padding: 4px;\n  font-size: 16px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ghostwhite;\n`;\n\nexport const FormSubmitBtn = styled.button`\n  width: 160px;\n  height: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  text-transform: uppercase;\n  border: 0px;\n  border-radius: 20px;\n  background-color: #3498db;\n  color: white;\n  box-shadow: none;\n  transition: all 250ms ease-in-out;\n\n  :hover,\n  :focus {\n    background-color: #39b0ff;\n    box-shadow: 0px 4px 4px #00000026, inset 0px 0px 0px 0px #0000004d;\n  }\n`;\n"],"names":["RegisterPage","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","nameInputId","nanoid","emailInputId","passwordInputId","onInputChange","target","value","FormWrapper","FormTitle","RegisterForm","onSubmit","evt","preventDefault","length","showInfoMessage","authOperations","autoComplete","FormInputLabel","htmlFor","FormInput","type","placeholder","onChange","id","required","FormSubmitBtn","styled"],"sourceRoot":""}