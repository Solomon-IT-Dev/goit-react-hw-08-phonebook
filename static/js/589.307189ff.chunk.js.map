{"version":3,"file":"static/js/589.307189ff.chunk.js","mappings":"0PAKe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACvC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOX,EAASW,GAClB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,SAgBN,OACE,4BACE,mDAEA,kBAAMC,SAVW,SAAAC,GACnBA,EAAIC,iBACJX,EAASY,EAAAA,GAAAA,SAAwB,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAPhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAaoBc,aAAa,MAA3C,WACE,mBAAOC,QAASZ,EAAhB,kBAEE,kBACEa,KAAK,OACLrB,KAAK,OACLsB,YAAY,kBACZR,MAAOd,EACPuB,SAAUX,EACVY,GAAIhB,EACJiB,UAAQ,QAIZ,mBAAOL,QAASV,EAAhB,oBAEE,kBACEW,KAAK,QACLrB,KAAK,QACLsB,YAAY,oBACZR,MAAOZ,EACPqB,SAAUX,EACVY,GAAId,EACJe,UAAQ,QAIZ,mBAAOL,QAAST,EAAhB,sBAEE,kBACEU,KAAK,WACLrB,KAAK,WACLsB,YAAY,eACZR,MAAOV,EACPmB,SAAUX,EACVY,GAAIb,EACJc,UAAQ,QAIZ,mBAAQJ,KAAK,SAAb","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nexport default function RegisterPage() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const onInputChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    formReset();\n  };\n\n  return (\n    <div>\n      <h1>New User registration</h1>\n\n      <form onSubmit={onFormSubmit} autoComplete=\"off\">\n        <label htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={onInputChange}\n            id={nameInputId}\n            required\n          />\n        </label>\n\n        <label htmlFor={emailInputId}>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your e-mail\"\n            value={email}\n            onChange={onInputChange}\n            id={emailInputId}\n            required\n          />\n        </label>\n\n        <label htmlFor={passwordInputId}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Set password\"\n            value={password}\n            onChange={onInputChange}\n            id={passwordInputId}\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n}\n"],"names":["RegisterPage","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","nameInputId","nanoid","emailInputId","passwordInputId","onInputChange","target","value","onSubmit","evt","preventDefault","authOperations","autoComplete","htmlFor","type","placeholder","onChange","id","required"],"sourceRoot":""}